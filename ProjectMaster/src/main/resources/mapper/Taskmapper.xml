<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="scit.master.planbe.dao.Taskmapper">
<!-- 업무 생성하기 -->
<insert id="Insert" parameterType="map">
    insert into task values(
   	 #{projectno}
    ,(select distinct m.memberno from project p join member m on p.projectno=m.projectno join users u on m.userno=u.userno where m.projectno =#{projectno} and m.userno=#{userno})
    ,TASK_SEQ.nextval
    ,#{taskname}
    ,#{taskcontent}
    ,upper(#{taskpriority})
    ,upper(#{taskstatus})
    ,#{taskstartdate}
    ,#{taskduedate}
    ,#{totaltime}
    ,#{donetime})
</insert>




<!-- 업무 리스트 출력하기 -->
<select id="getList" parameterType="map" resultType="TaskVO">

	select  t.projectno
		   ,t.memberno
		   ,t.taskno
		   ,t.taskname
		   ,t.taskcontent
		   ,t.taskpriority
		   ,t.taskStatus
		   ,to_char(t.startdate,'yyyy-mm-dd')startdate
		   ,to_char(t.duedate,'yyyy-mm-dd')duedate
		   ,t.totaltime
		   ,t.donetime
	
	from task	

	<choose>
		 
	 <when test="searchtype == 'title'">
	 
	 	t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno} 
							and t.taskname LIKE '%'||#{searchword}||'%'
	 
	 </when>
	 
	 	

   <when test="target == 'HIGH'">
	   
	   	t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno} 
	 						and t.taskpriority LIKE '%'||#{target}||'%'
	 </when>
	   <when test="target == 'NORMAL'">
	   
	   	t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno} 
	   						and t.taskpriority LIKE '%'||#{target}||'%'
	 </when>
	   <when test="target == 'LOW'">
	   
	   	t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno} 
	   						and t.taskpriority LIKE '%'||#{target}||'%'
	 </when>
	   <when test="userno != null and userno ==2">
	 	 		t join member m on t.memberno=m.memberno 
					join (select userno from users where groupname='Bclass') u on m.userno = u.userno
						
	 		</when>
	 
		 
	</choose>
   	
   	
	order by taskno asc
	
</select>

<!-- 업무 검색하기 -->
<select id="findTask" parameterType="TaskVO" resultType="TaskVO">
	select projectno
		   ,memberno
		   ,taskno
		   ,taskname
		   ,taskcontent
		   ,taskpriority
		   ,taskStatus
		   ,to_char(startdate,'yyyy-mm-dd')startdate
		   ,to_char(duedate,'yyyy-mm-dd')duedate
		   ,totaltime
		   ,donetime
	 from task 
	 where taskno=#{taskNo}
</select>

<!-- 업무 수정하기 -->
<update id="updateTask" parameterType="TaskVO">
	update task
	set taskname=#{taskName}
	,taskcontent=#{taskContent}
	,taskpriority=#{taskPriority}
	,taskStatus=#{taskStatus}
	,startdate=#{startDate}
	,duedate=#{dueDate}
	,totaltime=#{totalTime}
	,donetime=#{doneTime}
	where taskno=#{taskNo}
</update>

<!-- 업무 삭제하기 -->

<delete id="deleteTask" parameterType="TaskVO">
	delete from task where taskno=#{taskNo}
</delete>

<!-- 총 페이지 레코드 가져오기 -->

<select id="getTotalCount" parameterType="map" resultType="int">
	select count(*) from task
		<choose>
			<when test="searchtype=='title'">
			
				t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno}
							and t.taskname like '%'||#{searchword}||'%'
			</when>
		
			 <when test="target == 'HIGH'">
			 
			 	t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno}
			 				and t.taskpriority LIKE '%'||#{target}||'%'
	 		</when>
	  		 <when test="target == 'NORMAL'">
	  		 
	  		 	t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno}
	  		 				and t.taskpriority LIKE '%'||#{target}||'%'
	 		</when>
	   		 <when test="target == 'LOW'">
	   		 
	   		 	t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno}
	   		 				and t.taskpriority LIKE '%'||#{target}||'%'
	 		</when>
	 		 <when test="userno != null and userno !='2'">
	 	 		t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno}
	 		</when>
	 		 <when test="userno != null and userno =='2'">
	 	 		t join member m on t.memberno=m.memberno 
					join (select userno from users where groupname='Bclass') u on m.userno = u.userno
						
	 		</when>
		</choose>	
</select>

<!-- 진행상태에서 업무 검색하기 -->
<select id="searchTask" parameterType="map" resultType="TaskVO">
	select * from task
				
				t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno}
						 and t.taskNo=#{taskno}
		
		
		order by taskno asc

</select>

<!-- 전체 리스트(페이지 수와 상관없이) 가져오기 -->

<select id="getTotalList" parameterType="map" resultType="TaskVO">

	select * from task t join member m on t.memberno=m.memberno 
			      join (select userno from users where groupname='Bclass') u on m.userno = u.userno			
					  order by t.taskno asc

</select>


<!-- 전체 리스트(페이지 수와 상관없이)수 가져오기 -->
<select id="getTaskCount" parameterType="int" resultType="int">
	SELECT count(taskNo) FROM TASK t join member m on t.memberno=m.memberno 
					join users u on m.userno = u.userno
						and u.userno=#{userno}
</select>
	
</mapper>



